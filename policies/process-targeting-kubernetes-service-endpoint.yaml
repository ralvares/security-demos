apiVersion: config.stackrox.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: process-targeting-kubernetes-service-endpoint
spec:
  categories:
  - Kubernetes
  criteriaLocked: true
  description: Detects misuse of the Kubernetes Service API endpoint
  enforcementActions: []
  eventSource: DEPLOYMENT_EVENT
  exclusions: []
  isDefault: false
  lifecycleStages:
  - RUNTIME
  mitreAttackVectors:
  - tactic: TA0007
    techniques:
    - T1613
  mitreVectorsLocked: true
  policyName: GitOps - Process Targeting Kubernetes Service Endpoint
  policySections:
  - sectionName: ''
    policyGroups:
    - fieldName: Process Arguments
      booleanOperator: OR
      negate: false
      values:
      - value: https://(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|\$.?KUBERNETES_(PORT_443_TCP_ADDR|SERVICE_HOST).?)(:443)?/apis?/(v1(beta.)?/)?(.*\.k8s\.io|clusterrole.*|role.*|networkpolicies|cronjobs|certificate.*|podsecurity.*|secrets.*)
  rationale: A pod communicating to a Kubernetes API from via command line is highly
    irregular
  remediation: Look for open ports that may allow remote execution. Remove network
    utilities like curl and wget that allow these connections. Consider a firewall
    deny ingress firewall rule to the node serving the API
  scope: []
  severity: HIGH_SEVERITY
  disabled: false
